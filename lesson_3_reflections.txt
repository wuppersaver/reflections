When would you want to use a remote repository rather than keeping all your work local?

When working with other people on one single project or wanting to share the work, github is a great platform to do this. Others can access the files and make changes themselves and also it can get more attention, if it´s worthy of it.

Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?

Like the debate about automatic saving or manual saving in version control when pushing or pulling automatically the versions might not be finished or runable. Therefore the same arguments for pro and con are valid. One can forget to push or pull, but when doing it automatically one might also get to many unnecessary or unreasonable commits.

Describe the differences between forks, clones, and branches. When would you use one instead of another?

Forks are just internal GitHub-Clones, which allow me to access and change the repository of someone else, without changing the original. Clones to my computer from GitHub allow me to sync a repository online to e.g. collaborate with others or back things ub. Clones in my computer are repositorys and so I can change things if I don´t want to use branches. A branch is inside a single repository and represents two different versions of one or more programs, which the user can work
on to add a new feature or improve the program, so he will be able to switch between the different branches and edit them without changing the other branches.

What is the benefit of having a copy of the last known state of the remote stored locally?

Once one has changed something on the code, and has not pushed it to the repsository, one can easily check what he has done and also if a bug was introduced, this can be detected quite easily. Furthermore if a bug was introtduced by another collaborator, it is easy to restore the repository on the server to the old state.

How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?

Collaborating without Git or GitHub would involve sending the latest version of the code to one another and comparing them with the shells and diff. Therefore the detection of changes would be harder to realize and not in a nice and graphic way with colours. Furthermore without basic version control, there would be no log history and it would be hard to find bugs and so on in each others code and it would also be hard to get back to a previous stage. What would be easier, although depending on the project, would be the merging and the reviews, because the merging has to be done by hand and one can not accidentaly merge two versions and therefore perhaps delete changes or improvements made by the other person. This would be in some cases easier by merging manually.